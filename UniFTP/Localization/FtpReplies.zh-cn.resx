<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CURRENT_DIRECTORY" xml:space="preserve">
    <value>当前目录为 "{0}"</value>
  </data>
  <data name="DIRECTORY_EXISTS" xml:space="preserve">
    <value>目录已经存在</value>
  </data>
  <data name="DIRECTORY_NOT_FOUND" xml:space="preserve">
    <value>未找到目录</value>
  </data>
  <data name="ENABLING_TLS" xml:space="preserve">
    <value>启用 TLS 加密传输</value>
  </data>
  <data name="ENTERING_EXTENDED_PASSIVE_MODE" xml:space="preserve">
    <value>进入扩展Passive传输模式 (|||{0}|)</value>
  </data>
  <data name="ENTERING_PASSIVE_MODE" xml:space="preserve">
    <value>进入Passive传输模式 ({0},{1},{2},{3},{4},{5})</value>
  </data>
  <data name="EXTENSIONS_SUPPORTED" xml:space="preserve">
    <value>支持的扩展指令</value>
  </data>
  <data name="FILE_ACTION_COMPLETE" xml:space="preserve">
    <value>文件操作已完成</value>
  </data>
  <data name="FILE_ACTION_NOT_TAKEN" xml:space="preserve">
    <value>文件操作没有执行</value>
  </data>
  <data name="FILE_NOT_FOUND" xml:space="preserve">
    <value>文件未找到或无权限</value>
  </data>
  <data name="LOGGED_IN" xml:space="preserve">
    <value>用户已登录</value>
  </data>
  <data name="NEED_VERIFICATION" xml:space="preserve">
    <value>Need more verification</value>
  </data>
  <data name="NOT_IMPLEMENTED" xml:space="preserve">
    <value>命令未实现</value>
  </data>
  <data name="NOT_IMPLEMENTED_FOR_PARAMETER" xml:space="preserve">
    <value>命令的这个参数未实现</value>
  </data>
  <data name="NOT_LOGGED_IN" xml:space="preserve">
    <value>Not logged in</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>成功</value>
  </data>
  <data name="OPENING_DATA_TRANSFER" xml:space="preserve">
    <value>正在为 {1} 开启 {0} 模式传输 .</value>
  </data>
  <data name="PARAMETER_NOT_RECOGNIZED" xml:space="preserve">
    <value>参数 {0} 未能识别</value>
  </data>
  <data name="QUIT" xml:space="preserve">
    <value>Service closing control connection</value>
  </data>
  <data name="RENAME_FROM" xml:space="preserve">
    <value>等待下一个重命名命令</value>
  </data>
  <data name="RESTART_FROM" xml:space="preserve">
    <value>传输重启位置 {0}. 请发送 STORE 或 RETRIEVE</value>
  </data>
  <data name="SERVICE_READY" xml:space="preserve">
    <value>UniFTP Server Ready. (Ver.1.0)</value>
  </data>
  <data name="SYNTAX_ERROR" xml:space="preserve">
    <value>语法错误，命令未能识别</value>
  </data>
  <data name="SYSTEM" xml:space="preserve">
    <value>UNIX Type: L8</value>
  </data>
  <data name="TRANSFER_ABORTED" xml:space="preserve">
    <value>传输被中断</value>
  </data>
  <data name="TRANSFER_SUCCESSFUL" xml:space="preserve">
    <value>数据连接关闭，传输成功</value>
  </data>
  <data name="UNABLE_TO_OPEN_DATA_CONNECTION" xml:space="preserve">
    <value>无法打开数据连接</value>
  </data>
  <data name="USER_OK" xml:space="preserve">
    <value>Username ok, need password</value>
    <comment>这里不必更改语言，因为登录前通常不会指定编码</comment>
  </data>
  <data name="UTF8_ENCODING_ON" xml:space="preserve">
    <value>UTF8 编码开启</value>
  </data>
  <data name="MAKE_DIRECTORY_SUCCESS" xml:space="preserve">
    <value>"{0}" 文件夹已创建.</value>
  </data>
  <data name="OPENING_SAFE_DATA_TRANSFER" xml:space="preserve">
    <value>正在为 {1} 开启 {0} 模式传输 (TLS/SSL加密).</value>
  </data>
  <data name="TLS_AUTH_FAILED" xml:space="preserve">
    <value>TLS 认证失败</value>
  </data>
  <data name="TLS_DISABLED" xml:space="preserve">
    <value>AUTH 指令已禁用</value>
  </data>
</root>